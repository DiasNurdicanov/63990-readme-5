import { PrismaClient, PostType, PostStatus } from '@prisma/client';

const FIRST_POST_UUID = '6d308040-96a2-4162-bea6-2338e9976540';
const SECOND_POST_UUID = 'ab04593b-da99-4fe3-8b4b-e06d82e2efdd';

const FIRST_USER_ID = '658170cbb954e9f5b905ccf4';
const SECOND_USER_ID = '6581762309c030b503e30512';


function getPosts() {
  return [
    {
      id: FIRST_POST_UUID,
      userId: FIRST_USER_ID,
      status: PostStatus.published,
      postType: PostType.text,
      title: '–ü–æ–ª–µ–∑–Ω—ã–π –ø–æ—Å—Ç –ø—Ä–æ –ë–∞–π–∫–∞–ª',
      preview: '–û–∑–µ—Ä–æ –ë–∞–π–∫–∞–ª ‚Äì –æ–≥—Ä–æ–º–Ω–æ–µ –¥—Ä–µ–≤–Ω–µ–µ –æ–∑–µ—Ä–æ –≤ –≥–æ—Ä–∞—Ö –°–∏–±–∏—Ä–∏ –∫ —Å–µ–≤–µ—Ä—É –æ—Ç –º–æ–Ω–≥–æ–ª—å—Å–∫–æ–π –≥—Ä–∞–Ω–∏—Ü—ã. –ë–∞–π–∫–∞–ª —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –≥–ª—É–±–æ–∫–∏–º –æ–∑–µ—Ä–æ–º –≤ –º–∏—Ä–µ.',
      text: '–û–∑–µ—Ä–æ –ë–∞–π–∫–∞–ª ‚Äì –æ–≥—Ä–æ–º–Ω–æ–µ –¥—Ä–µ–≤–Ω–µ–µ –æ–∑–µ—Ä–æ –≤ –≥–æ—Ä–∞—Ö –°–∏–±–∏—Ä–∏ –∫ —Å–µ–≤–µ—Ä—É –æ—Ç –º–æ–Ω–≥–æ–ª—å—Å–∫–æ–π –≥—Ä–∞–Ω–∏—Ü—ã. –ë–∞–π–∫–∞–ª —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –≥–ª—É–±–æ–∫–∏–º –æ–∑–µ—Ä–æ–º –≤ –º–∏—Ä–µ. –û–Ω –æ–∫—Ä—É–∂–µ–Ω —Å–µ—Ç—å—é –ø–µ—à–µ—Ö–æ–¥–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤, –Ω–∞–∑—ã–≤–∞–µ–º—ã—Ö –ë–æ–ª—å—à–æ–π –±–∞–π–∫–∞–ª—å—Å–∫–æ–π —Ç—Ä–æ–ø–æ–π. –î–µ—Ä–µ–≤–Ω—è –õ–∏—Å—Ç–≤—è–Ω–∫–∞, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–∞—è –Ω–∞ –∑–∞–ø–∞–¥–Ω–æ–º –±–µ—Ä–µ–≥—É –æ–∑–µ—Ä–∞, ‚Äì –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –¥–ª—è –ª–µ—Ç–Ω–∏—Ö —ç–∫—Å–∫—É—Ä—Å–∏–π. –ó–∏–º–æ–π –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—å–∫–∞—Ö –∏ —Å–æ–±–∞—á—å–∏—Ö —É–ø—Ä—è–∂–∫–∞—Ö.',
      comments: [
        {
          message: '–ö—Ä–∞—Å–æ—Ç–∞!',
          userId: FIRST_USER_ID,
        },
      ]
    },
  ]
}

async function seedDb(prismaClient: PrismaClient) {
  const mockPosts = getPosts();
  for (const post of mockPosts) {
    await prismaClient.post.create({
      data: {
        id: post.id,
        status: post.status,
        userId: post.userId,
        type: post.postType,
        comments: post.comments ? {
          create: post.comments
        } : undefined
      }
    })
  }

  console.info('ü§òÔ∏è Database was filled');
}

async function bootstrap() {
  const prismaClient = new PrismaClient();

  try {
    await seedDb(prismaClient);
    globalThis.process.exit(0);
  } catch (error: unknown) {
    console.error(error);
    globalThis.process.exit(1);
  } finally {
    await prismaClient.$disconnect();
  }
}

bootstrap();